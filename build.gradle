/*
 * Copyright 2017 John Grosh & Kaidan Gustave
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Version {
    String major, minor

    @Override
    String toString()
    {
        return "$major.$minor"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
}

group 'party.balloonboat'
version '0.3'

mainClassName = "${group}.Bot"

def jda = '6d5f0cc'
def jda_utils = 'development-SNAPSHOT'

sourceCompatibility = 1.8

sourceSets {
    test.java.srcDirs += 'src/test/java'
    test {
        compileClasspath = main.output + main.resources
        runtimeClasspath = main.output + main.resources
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io/' }
}

dependencies {
    // JDA
    compile "com.github.DV8FromTheWorld:JDA:$jda"
    compile "com.github.jagrosh:JDA-Utilities:$jda_utils"

    // logback
    compile 'ch.qos.logback:logback-classic:1.2.3'

    // h2
    compile 'com.h2database:h2:1.4.196'

    // junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

shadowJar {
    classifier = ''
    version = ''
    baseName = "BalloonBoat"
}

build {
    dependsOn clean
    dependsOn classes
    dependsOn shadowJar

    classes.mustRunAfter clean
    shadowJar.mustRunAfter classes
}